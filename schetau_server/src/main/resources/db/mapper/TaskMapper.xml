<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright 2020 DataCanvas
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.github.datacanvasio.schetau.db.mapper.TaskMapper">
    <sql id="table">schetau_task</sql>
    <sql id="task_signal">schetau_task_signal</sql>
    <sql id="signal">schetau_signal</sql>

    <select id="findByStatus" resultType="Task">
        select * from
        <include refid="table"/>
        <where>
            task_status = #{status}
        </where>
    </select>

    <insert id="insert" parameterType="Task" useGeneratedKeys="true" keyProperty="taskId">
        insert into
        <include refid="table"/>
        (
        <trim suffixOverrides=",">
            task_id,
            plan_id,
            job_id,
            create_time,
            run_times,
            <if test="model.waitTimeout != null">wait_timeout,</if>
            <if test="model.signalId != null">signal_id,</if>
            task_status,
        </trim>
        ) values (
        <trim suffixOverrides=",">
            #{model.taskId},
            #{model.planId},
            #{model.jobId},
            #{model.createTime},
            #{model.runTimes},
            <if test="model.waitTimeout != null">#{model.waitTimeout},</if>
            <if test="model.signalId != null">#{model.signalId},</if>
            #{model.taskStatus},
        </trim>
        )
    </insert>

    <update id="update" parameterType="Task">
        update
        <include refid="table"/>
        <set>
            <if test="model.taskStatus != null">task_status = #{model.taskStatus},</if>
            <if test="model.runTime != null">run_time = #{model.runTime},</if>
            <if test="model.result != null">result = #{model.result},</if>
        </set>
        <where>
            task_id = #{model.taskId}
        </where>
    </update>

    <update id="updateWaitingToExpiredByTime" parameterType="long">
        update
        <include refid="table"/>
        <set>
            task_status = 'EXPIRED',
        </set>
        <where>
            task_status = 'WAITING'
            and wait_timeout &lt;&gt; -1
            and create_time + wait_timeout &lt; #{time}
        </where>
    </update>

    <update id="updateWaitingToReadyBySignals">
        update
        <include refid="table"/>
        t
        <set>
            t.task_status = 'READY',
        </set>
        <where>
            t.task_status = 'WAITING'
            and exists (select * from
            <include refid="signal"/>
            s
            <where>
                t.signal_id = s.signal_id
                and s.count_down &lt;= 0
            </where>
            )
        </where>
    </update>
</mapper>
